import "../main.ostw";

// Crew variables
playervar define numTasks = 0;
playervar define hudTaskString = "";
playervar define hudCompleteTaskString = "";
playervar define isTaskInProgress = false;
playervar Task taskInProgress;
playervar define taskProgressTime;

rule: "Player: Crew Interact (Task)"
Event.OngoingPlayer
if (gameState == GameState.Play)
if (EventPlayer().isAlive)
if (EventPlayer().role == PlayerRole.CREW)
if (IsButtonHeld(EventPlayer(), Button.Interact))
if (!EventPlayer().isTaskInProgress)
{
    Task[] targetTasks = FilteredArray(global_tasks, EventPlayer().incompleteTasks.Contains(ArrayElement()) && DistanceBetween((<Task>ArrayElement()).Position, EventPlayer()) <= InteractRadius);
    if (targetTasks.Length == 0) {
        Wait(0.5);
        return;
    }

    EventPlayer().isTaskInProgress = true;
    EventPlayer().taskInProgress = FirstOf(targetTasks);
    EventPlayer().taskProgressTime = 0;
    ChaseVariableAtRate(EventPlayer().taskProgressTime, EventPlayer().taskInProgress.Duration, 1.0, RateChaseReevaluation.None);
}

rule: "Player: Crew Cancel Task"
Event.OngoingPlayer
if (gameState == GameState.Play)
if (EventPlayer().role == PlayerRole.CREW)
if (EventPlayer().isTaskInProgress)
if (!IsButtonHeld(EventPlayer(), Button.Interact) || DistanceBetween(EventPlayer().taskInProgress.Position, EventPlayer()) > InteractRadius)
{
    StopChasingVariable(EventPlayer().taskProgressTime);
    EventPlayer().isTaskInProgress = false;
}

rule: "Player: Crew Complete Task"
Event.OngoingPlayer
if (gameState == GameState.Play)
if (EventPlayer().role == PlayerRole.CREW)
if (EventPlayer().isTaskInProgress)
if (EventPlayer().taskProgressTime >= EventPlayer().taskInProgress.Duration)
{
    EventPlayer().isTaskInProgress = false;

    PlayEffect(
        VisibleTo: EventPlayer(),
        Type: PlayEffect.BuffImpactSound,
        Position: EventPlayer(),
        Radius: 75
    );

    EventPlayer().taskInProgress.perform(EventPlayer());

    StopChasingVariable(EventPlayer().taskProgressTime);
    ModifyVariable(EventPlayer().completeTasks, Operation.AppendToArray, EventPlayer().taskInProgress);
    ModifyVariable(EventPlayer().incompleteTasks, Operation.RemoveFromArrayByValue, EventPlayer().taskInProgress);
    totalCompleteTaskCount++;
    updateHudStrings(EventPlayer());
    checkEndGame();
}

rule: "Player: DummyBot Crew Task Completion"
Event.OngoingPlayer
if (gameState == GameState.Play)
if (EventPlayer().role == PlayerRole.CREW)
if (IsDummyBot(EventPlayer()))
{
    while (gameState == GameState.Play) {
        Wait(RandomInteger(15, 20), WaitBehavior.AbortWhenFalse);
        totalCompleteTaskCount++;
        checkEndGame();
    }
}
