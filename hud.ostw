import "main.ostw";

globalvar define debugHudString = "";

void drawGlobalHUD() {
    CreateHudText(
        VisibleTo   : AllPlayers(),
        Header      : <"Crew Tasks Complete: <0> / <1>", totalCompleteTaskCount, totalTaskCount>,
        HeaderColor : Color.LimeGreen,
        Location    : Location.Left,
        Spectators  : Spectators.VisibleNever,
        Reevaluation: HudTextRev.String,
        SortOrder   : 0
    );

    CreateHudText(
        VisibleTo   : AllPlayers(),
        Text        : " \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        TextColor   : Color.White,
        Location    : Location.Left,
        Spectators  : Spectators.VisibleNever,
        Reevaluation: HudTextRev.None,
        SortOrder   : 1
    );

    CreateHudText(
        VisibleTo  : FilteredArray(AllPlayers(), ArrayElement().role == PlayerRole.CREW),
        Header     : "You are a Crewmate.\nComplete tasks to win.",
        HeaderColor: Color.SkyBlue,
        Location   : Location.Right,
        SortOrder  : 0,
        Spectators : Spectators.VisibleNever,
        Reevaluation: HudTextRev.None
    );

    CreateHudText(
        VisibleTo  : FilteredArray(AllPlayers(), ArrayElement().role == PlayerRole.IMPOSTER),
        Header     : "You are an Imposter.\nKill the crew to win.",
        HeaderColor: Color.Red,
        Location   : Location.Right,
        SortOrder  : 0,
        Spectators : Spectators.VisibleNever,
        Reevaluation: HudTextRev.None
    );

    CreateHudText(
        VisibleTo  : FilteredArray(AllPlayers(), ArrayElement().role == PlayerRole.FOOL),
        Header     : "You are the Fool.\nGet Ejected in a vote to win.",
        HeaderColor: Color.Yellow,
        Location   : Location.Right,
        SortOrder  : 0,
        Spectators : Spectators.VisibleNever,
        Reevaluation: HudTextRev.None
    );

    CreateHudText(
        VisibleTo   : AllPlayers(),
        Text        : " \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        TextColor   : Color.Green,
        Location    : Location.Right,
        Spectators  : Spectators.VisibleNever,
        Reevaluation: HudTextRev.None,
        SortOrder   : 2
    );

    CreateHudText(
        VisibleTo   : FilteredArray(AllPlayers(), ArrayElement().isVenting == true),
        Header      : "VENTING",
        HeaderColor : Color.Purple,
        Text        : "You are invisible, but cannot kill.\nUn-vent to regain corporeal form.",
        TextColor   : Color.White,
        Location    : Location.Top,
        Spectators  : Spectators.VisibleNever,
        Reevaluation: HudTextRev.VisibleTo,
        SortOrder   : 4
    );

    CreateHudText(
        VisibleTo   : FilteredArray(AllPlayers(), ArrayElement().isAlive == false),
        Header      : "YOU ARE DEAD",
        HeaderColor : Color.White,
        Text        : "Tip: Dead crew can still perform tasks!",
        TextColor   : Color.White,
        Location    : Location.Top,
        Spectators  : Spectators.VisibleNever,
        Reevaluation: HudTextRev.VisibleTo,
        SortOrder   : 4
    );

    CreateHudText(
        VisibleTo   : sabotageInProgress >= 0 ? AllPlayers() : EmptyArray(),
        Header      : sabotageInProgressHeader,
        HeaderColor : Color.Red,
        Text        : sabotageInProgressValue,
        TextColor   : Color.Red,
        Location    : Location.Top,
        Spectators  : Spectators.VisibleNever,
        Reevaluation: HudTextRev.VisibleToAndString,
        SortOrder   : 5
    );

    CreateHudText(
        VisibleTo   : FilteredArray(AllPlayers(), ArrayElement().role == PlayerRole.IMPOSTER),
        Header      : InputBindingString(ButtonValue(Button.Ultimate)),
        HeaderColor : Color.Purple,
        Text        : canSabotage ? "Sabotage" : <"Cooldown: <0>", RoundToInteger(sabotageCooldown, Rounding.Up)>,
        TextColor   : Color.Purple,
        Location    : Location.Right,
        Spectators  : Spectators.VisibleNever,
        Reevaluation: HudTextRev.VisibleToAndString,
        SortOrder   : 5
    );

    CreateHudText(
        VisibleTo   : AllPlayers(),
        Text        : <"Debug: <0>", debugHudString>,
        TextColor   : Color.White,
        Location    : Location.Top,
        Spectators  : Spectators.VisibleNever,
        Reevaluation: HudTextRev.String,
        SortOrder   : 6
    );
}

void drawPlayerHUD(ref define player) {
    CreateHudText(
        VisibleTo   : player,
        Text        : player.hudTaskString,
        TextColor   : Color.White,
        Header      : "Tasks",
        HeaderColor : Color.White,
        Subheader   : player.hudCompleteTaskString,
        SubheaderColor: Color.Green,
        Location    : Location.Left,
        Spectators  : Spectators.VisibleNever,
        Reevaluation: HudTextRev.String,
        SortOrder   : 2
    );

    CreateHudText(
        VisibleTo   : player,
        Header      : InputBindingString(ButtonValue(Button.Interact)),
        HeaderColor : Color.Green,
        Text        : player.hudInteractString,
        TextColor   : Color.Green,
        Location    : Location.Right,
        Spectators  : Spectators.VisibleNever,
        Reevaluation: HudTextRev.VisibleToAndString,
        SortOrder   : 3
    );

    CreateHudText(
        VisibleTo   : player,
        Header      : InputBindingString(ButtonValue(Button.Reload)),
        HeaderColor : Color.Orange,
        Text        : player.hudReloadString,
        TextColor   : Color.Orange,
        Location    : Location.Right,
        Spectators  : Spectators.VisibleNever,
        Reevaluation: HudTextRev.VisibleToAndString,
        SortOrder   : 4
    );

    CreateHudText(
        VisibleTo   : player.isTaskInProgress ? player : EmptyArray(),
        Header      : <"Task Progress: <0> / <1>", RoundToInteger(player.taskProgressTime*10, Rounding.Down), player.interactableTask.Duration*10>,
        HeaderColor : Color.Orange,
        Location    : Location.Top,
        Spectators  : Spectators.VisibleNever,
        Reevaluation: HudTextRev.VisibleToAndString,
        SortOrder   : 2
    );

    CreateHudText(
        VisibleTo   : player.killCooldown != 0 ? player : EmptyArray(),
        Header      : <"Kill Cooldown: <0>", RoundToInteger(player.killCooldown, Rounding.Up)>,
        HeaderColor : Color.Orange,
        Location    : Location.Top,
        Spectators  : Spectators.VisibleNever,
        Reevaluation: HudTextRev.VisibleToAndString,
        SortOrder   : 2
    );
}
