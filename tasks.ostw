import "main.ostw";

class Task {
    public define Name;
    public Vector Position;
    public define Duration;

    public Task(ref define name, ref Vector position, ref define duration) {
        this.Name = name;
        this.Position = position;
        this.Duration = duration;
    }

    void draw() {
        CreateEffect(
            VisibleTo: PlayersWithinRadius(Position, 30),
            Type: Effect.Sphere,
            Color: Color.LimeGreen,
            Position: Position,
            Radius: 0.75,
            Reevaluation: EffectRev.VisibleTo
        );
        CreateInWorldText(
            VisibleTo: PlayersWithinRadius(Position, 3),
            Header: Name,
            TextColor: Color.White,
            Position: Position,
            Scale: 4,
            Clipping: Clipping.DoNotClip,
            Reevaluation: InworldTextRev.VisibleTo
        );
        CreateInWorldText(
            FilteredArray(AllPlayers(), ArrayElement().role == PlayerRole.CREW && DistanceBetween(PositionOf(ArrayElement()), Position) > 3 && ArrayElement().incompleteTasks.Contains(this)),
            "â–¼", Position, 4, Clipping.DoNotClip,
            InworldTextRev.VisibleTo,
            Color.Green
        );
    }
}

globalvar Task[] global_tasks = [
    new Task("Collect Butterflies", Vector(-189.9, 4.0, -41.6), 5.0),
    new Task("Take Out Trash", Vector(-161.5, 1.2, -48.2), 8.0),
    new Task("Fold Towels", Vector(-279.18, 0.5, 10.5), 10.0),
    new Task("Admire The View", Vector(-230.5, 0.2, -32.8), 5.0),
    new Task("Perform A Dance Routine", Vector(-179.4, -3.5, -66.0), 8.0),
    new Task("Unpack Boxes", Vector(-243.2, -0.5, 1.8), 12.0),
    new Task("Watch TV", Vector(-230.42, -0.48, 12.09), 15.0),
    new Task("Weed The Garden", Vector(-253.54, -4.04, 5.57), 8.0),
    new Task("Chop The Crab", Vector(-186.13, 2.16, -20.49), 8.0),
    new Task("Serve The Wine", Vector(-186.7, 2.0, -19.8), 5.0)
];

void drawTasks() {
    // Can't use a loop here because the index will get bound to the FilteredArray
    global_tasks[0].draw();
    global_tasks[1].draw();
    global_tasks[2].draw();
    global_tasks[3].draw();
    global_tasks[4].draw();
    global_tasks[5].draw();
    global_tasks[6].draw();
    global_tasks[7].draw();
    global_tasks[8].draw();
    global_tasks[9].draw();
}
