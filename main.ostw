import "customGameSettings.json";
import "player/player.ostw";
import "player/pips.ostw";
import "player/imposter.ostw";
import "player/crewmate.ostw";
import "spawnBots.ostw";
import "tasks.ostw";
import "util.ostw";
import "hud.ostw";
import "lobby.ostw";
import "corpse.ostw";
import "voting.ostw";
import "vents.ostw";
import "emergencyButton.ostw";
import "sabotage.ostw";

enum GameState {
    Unknown,
    Waiting,
    Lobby,
    Start,
    Play,
    Voting,
    End
}

globalvar define TICK = 0.25;
globalvar GameState gameState = GameState.Unknown;
globalvar define totalTaskCount;
globalvar define totalCompleteTaskCount;


rule: "Global: Setup"
{
    DisableInspectorRecording();
    reset();
    DisableAnnouncer();
    DisableCompletion();
    DisableMusic();
    DisableScoring();

    SetMatchTime(0);
    PauseMatchTime();
}

rule: "Global: State Start"
if (gameState == GameState.Start)
{
    drawTasks();
    drawVents();
    drawEmergencyButton();
    Wait(1);
    gameState = GameState.Play;
}

rule: "Global: Start Play"
if (gameState == GameState.Play)
{
    checkEndGame();
    drawGlobalHUD();
    SetMoveSpeed(FilteredArray(AllPlayers(), ArrayElement().isAlive), MoveSpeed.Value);
    SetMoveSpeed(FilteredArray(AllPlayers(), !ArrayElement().isAlive), 2 * MoveSpeed.Value);
    StopForcingThrottle(AllPlayers());
}

rule: "Player: State Play"
Event.OngoingPlayer
if (gameState == GameState.Play) {
    drawPlayerHUD(EventPlayer());
    updateHudStrings(EventPlayer());
    resetSabotage();
}

rule: "Start"
if (gameState == GameState.Waiting)
if (IsTrueForAll(AllPlayers(), HasSpawned(ArrayElement()) || IsDead(ArrayElement())))
{
    Wait(2);
    gameState = GameState.Lobby;
}

void reset() "Reset Game" {
    AllPlayers().incompleteTasks = EmptyArray();
    AllPlayers().completeTasks = EmptyArray();
    AllPlayers().isVenting = false;
    AllPlayers().hasCorpse = false;
    AllPlayers().hasButtonPress = true;
    AllPlayers().isTaskInProgress = false;
    totalTaskCount = 0;
    totalCompleteTaskCount = 0;

    AllPlayers().isAlive = true;
    gameState = GameState.Waiting;
}

rule: "Global: Game End State"
if (gameState == GameState.End)
{
    CleanUpSabotage();
    SetMoveSpeed(AllPlayers(), 0);
    Wait(4);

    foreach (define player in AllPlayers()) {
        if (!player.isAlive) {
            ForcePlayerHero(player, player.originalHero);
            EnableMovementCollisionWithPlayers(player);
            SetInvisible(player, InvisibleTo.None);
        }
    }

    DestroyAllHudText();
    DestroyAllIcons();
    DestroyAllInworldText();
    DestroyAllDummyBots();
    DestroyAllEffects();

    reset();
}

void imposterVictory() "Imposter Victory" {
    BigMessage(AllPlayers(), "Imposters Win!");
    CreateHudText(
        VisibleTo   : AllPlayers(),
        Header      : "IMPOSTERS WIN!",
        HeaderColor : Color.Red,
        Location    : Location.Top,
        Spectators  : Spectators.VisibleAlways,
        Reevaluation: HudTextRev.None,
        SortOrder   : 10
    );
    gameState = GameState.End;
}

void crewVictory() "Crew Victory" {
    BigMessage(AllPlayers(), "Crewmates Win!");
    CreateHudText(
        VisibleTo   : AllPlayers(),
        Header      : "CREWMATES WIN!",
        HeaderColor : Color.Blue,
        Location    : Location.Top,
        Spectators  : Spectators.VisibleAlways,
        Reevaluation: HudTextRev.None,
        SortOrder   : 10
    );
    gameState = GameState.End;
}

void foolVictory() "Fool Victory" {
    BigMessage(AllPlayers(), "Fool Wins!");
    CreateHudText(
        VisibleTo   : AllPlayers(),
        Header      : "FOOL WINS!",
        HeaderColor : Color.Yellow,
        Location    : Location.Top,
        Spectators  : Spectators.VisibleAlways,
        Reevaluation: HudTextRev.None,
        SortOrder   : 10
    );
    gameState = GameState.End;
}

void checkEndGame() "Play: Check End Game" {
    if (gameState == GameState.Play || gameState == GameState.Voting) {
        if (totalCompleteTaskCount >= totalTaskCount || CountOf(AllAliveImposters()) == 0) {
            crewVictory();
        }
        if ((2 * CountOf(AllAliveImposters())) >= CountOf(AllAlive())) {
            imposterVictory();
        }
    }
}